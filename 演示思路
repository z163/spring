1、完善非spring实现的[添加客户]需求
	* 依赖注入
	* JdbcTemplate
	* 事务
2、使用spring实现[添加用户]需求（暂时不考虑事务）
	* XML方式（spring容器管理的bean都是通过xml文件配置出来的）
		* bean标签介绍
		* 实例化bean的三种方式（无参构造方法、静态工厂、动态工厂）
		* 依赖注入的方式（构造方法注入、set方法注入、p名称空间注入）
		* 演示不同数据类型的依赖注入
	* 注解和XML混合方式
		* 常用注解介绍（IoC、DI）
		* 如何开发自定义注解
	* 纯注解方式(零配置方式)
		* 纯注解方式的常用注解介绍(springboot)
3、分别使用spring+junit的方式，编写dao层和业务层的单元测试，思考：表现层是否也需要单元测试？该咋写？
4、源码分析
	* IoC容器初始化流程分析
		* BeanFactory的创建
		* BeanDefinition的解析注册
		* BeanFactoryPostProcessor的处理
		* Bean的实例化、属性填充、初始化（单例Bean）
	* context标签源码分析
	* aop标签初始化分析
	* tx标签初始化分析
5、循环依赖问题介绍
	* 什么是循环依赖
	* spring的循环依赖指的是构造方法循环依赖和set方法循环依赖
		* 其中构造方法循环依赖无法解决
		* set方法循环依赖使用三级缓存可以解决
6、AOP介绍
	* 原理分析
	* AOP相关术语
	* AOP实现之AspectJ介绍
	* AOP实现之Spring AOP原理介绍
7、Spring基于AspectJ的AOP使用
	* 使用XML方式实现
	* 使用注解和XML混合方式实现
	* 使用纯注解方式实现
8、Spring JdbcTemplate实现
9、Spring 事务支持
10、Spring整合Mybatis
11、设计模式讲解（中间掺杂着讲解）
	* 简单工厂模式
	* 抽象工厂模式
	* 单例模式
	* 模板模式
	
	* 代理模式
	* 组合模式
	* 原型模式
	* 构建者模式
	* 策略模式
	* 适配模式
	* 装饰模式
	* 委托模式
